<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="IllegalPath" xml:space="preserve">
    <value>Illegal path</value>
  </data>
  <data name="InvalidTransaction" xml:space="preserve">
    <value>Invalid transaction object.</value>
  </data>
  <data name="PathAlreadyExists" xml:space="preserve">
    <value>Path already exists.</value>
  </data>
  <data name="DirectoryNotFound" xml:space="preserve">
    <value>Directory not found</value>
  </data>
  <data name="InvalidDirectoryName" xml:space="preserve">
    <value>Invalid directory name</value>
  </data>
  <data name="TransactionAlreadyCommitted" xml:space="preserve">
    <value>Transaction already committed.</value>
  </data>
  <data name="TransactionAlreadyAborted" xml:space="preserve">
    <value>Transaction already aborted.</value>
  </data>
  <data name="TransactionalConflict" xml:space="preserve">
    <value>Transactional conflict.</value>
  </data>
  <data name="TransactionNotActive" xml:space="preserve">
    <value>Transaction not active.</value>
  </data>
  <data name="TransactionNotRequested" xml:space="preserve">
    <value>Transaction not requested.</value>
  </data>
  <data name="InvalidTransactionRequest" xml:space="preserve">
    <value>Invalid transaction request.</value>
  </data>
  <data name="AlphaFSInternalError" xml:space="preserve">
    <value>AlphaFS Internal Error</value>
  </data>
  <data name="AttemptingToGenerateExceptionFromSuccessfulOperation" xml:space="preserve">
    <value>Incorrectly implemented function attempting to generate exception from successful operation.
</value>
  </data>
  <data name="ErrorCodeWas0" xml:space="preserve">
    <value>Error code was</value>
  </data>
  <data name="HardLinksOnNonNTFSPartitionsIsNotSupported" xml:space="preserve">
    <value>Creating hard-links on non-NTFS partitions is not supported</value>
  </data>
  <data name="NotAReparsePoint" xml:space="preserve">
    <value>The file or directory is not a reparse point.</value>
  </data>
  <data name="ThisStreamDoesNotSupportSeeking" xml:space="preserve">
    <value>This stream does not support seeking.</value>
  </data>
  <data name="CountMustNotBeNegative" xml:space="preserve">
    <value>Count must not be negative</value>
  </data>
  <data name="OffsetMustNotBeNegative" xml:space="preserve">
    <value>Offset must not be negative</value>
  </data>
  <data name="BufferIsNotLargeEnoughForTheRequestedOperation" xml:space="preserve">
    <value>Buffer is not large enough for the requested operation.</value>
  </data>
  <data name="InvalidSecurityDescriptorReturnedFromSystem" xml:space="preserve">
    <value>Invalid security descriptor returned from system.</value>
  </data>
  <data name="HandleClosed" xml:space="preserve">
    <value>Handle is closed.</value>
  </data>
  <data name="HandleInvalid" xml:space="preserve">
    <value>Invalid handle.</value>
  </data>
  <data name="HandleInvalidWin32Error" xml:space="preserve">
    <value>Invalid handle. Win32Error: [{0}]</value>
  </data>
  <data name="UNCPathShouldMatchTheFormatServerShare" xml:space="preserve">
    <value>Network share path should match the format: \\server\share</value>
  </data>
  <data name="BackupFileStream_Unlock_Backup_FileStream_Unlock_Position_must_not_be_negative_" xml:space="preserve">
    <value>Backup FileStream Unlock Position must not be negative.</value>
  </data>
  <data name="BackupFileStream_Unlock_Backup_FileStream_Lock_Length_must_not_be_negative_" xml:space="preserve">
    <value>Backup FileStream Lock Length must not be negative.</value>
  </data>
  <data name="StreamInvalid" xml:space="preserve">
    <value>Invalid stream.</value>
  </data>
  <data name="SafeGlobalMemoryBufferHandle_CopyTo_Destination_offset_must_not_be_negative" xml:space="preserve">
    <value>Destination offset must not be negative</value>
  </data>
  <data name="SafeGlobalMemoryBufferHandle_CopyTo_Length_must_not_be_negative_" xml:space="preserve">
    <value>Length must not be negative.</value>
  </data>
  <data name="SafeGlobalMemoryBufferHandle_CopyTo_Source_offset_and_length_outside_the_bounds_of_the_array" xml:space="preserve">
    <value>Source offset and length outside the bounds of the array</value>
  </data>
  <data name="Privilege_Privilege_name_cannot_be_empty" xml:space="preserve">
    <value>name cannot be empty</value>
  </data>
  <data name="DirectoryExists" xml:space="preserve">
    <value>Directory exists</value>
  </data>
  <data name="FileExists" xml:space="preserve">
    <value>File exists</value>
  </data>
  <data name="CannotCreateDirectory" xml:space="preserve">
    <value>Cannot create directory</value>
  </data>
  <data name="Argument_is_not_a_valid_Volume_GUID" xml:space="preserve">
    <value>Argument is not a valid Volume GUID.</value>
  </data>
  <data name="RequiresWindowsVistaOrHigher" xml:space="preserve">
    <value>This method requires Windows Vista or higher.</value>
  </data>
  <data name="FileExistsWithSameNameSpecifiedByPath" xml:space="preserve">
    <value>The target directory is a file, not a directory: [{0}]</value>
  </data>
  <data name="DevicesAreNotSupported" xml:space="preserve">
    <value>Devices are not supported.</value>
  </data>
  <data name="DirectoryNotEmpty" xml:space="preserve">
    <value>Directory is not empty: [{0}]</value>
  </data>
  <data name="StreamNameWithColon" xml:space="preserve">
    <value>Stream name should not contain a colon.</value>
  </data>
  <data name="HandleDangerousRef" xml:space="preserve">
    <value>SafeGlobalMemoryBufferHandle DangerousAddRef / DangerousRelease failure.</value>
  </data>
  <data name="PathCannotBeEmpty" xml:space="preserve">
    <value>The path cannot be an empty string.</value>
  </data>
  <data name="IllegalCharactersInPath" xml:space="preserve">
    <value>Illegal characters: [{0}] in path.</value>
  </data>
  <data name="PathIsZeroLengthOrOnlyWhiteSpace" xml:space="preserve">
    <value>Path is a zero-length string or contains only white space.</value>
  </data>
  <data name="PathFormatUnsupported" xml:space="preserve">
    <value>The given path's format is not supported: [{0}]</value>
  </data>
  <data name="DirectoryExistsWithSameNameSpecifiedByPath" xml:space="preserve">
    <value>The target file is a directory, not a file: [{0}]</value>
  </data>
  <data name="FileHidden" xml:space="preserve">
    <value>The specified file is hidden: [{0}]</value>
  </data>
  <data name="UndeterminedCopyMoveAction" xml:space="preserve">
    <value>Could not determine Copy or Move action.</value>
  </data>
  <data name="InvalidFileAttribute" xml:space="preserve">
    <value>An attempt to set an invalid file attribute failed.</value>
  </data>
</root>