//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Alphaleonis.Win32 {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Alphaleonis.Win32.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AlphaFS Internal Error.
        /// </summary>
        internal static string AlphaFSInternalError {
            get {
                return ResourceManager.GetString("AlphaFSInternalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument is not a valid Volume GUID..
        /// </summary>
        internal static string Argument_is_not_a_valid_Volume_GUID {
            get {
                return ResourceManager.GetString("Argument_is_not_a_valid_Volume_GUID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrectly implemented function attempting to generate exception from successful operation.
        ///.
        /// </summary>
        internal static string AttemptingToGenerateExceptionFromSuccessfulOperation {
            get {
                return ResourceManager.GetString("AttemptingToGenerateExceptionFromSuccessfulOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup FileStream Lock Length must not be negative..
        /// </summary>
        internal static string BackupFileStream_Unlock_Backup_FileStream_Lock_Length_must_not_be_negative_ {
            get {
                return ResourceManager.GetString("BackupFileStream_Unlock_Backup_FileStream_Lock_Length_must_not_be_negative_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup FileStream Unlock Position must not be negative..
        /// </summary>
        internal static string BackupFileStream_Unlock_Backup_FileStream_Unlock_Position_must_not_be_negative_ {
            get {
                return ResourceManager.GetString("BackupFileStream_Unlock_Backup_FileStream_Unlock_Position_must_not_be_negative_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Buffer is not large enough for the requested operation..
        /// </summary>
        internal static string BufferIsNotLargeEnoughForTheRequestedOperation {
            get {
                return ResourceManager.GetString("BufferIsNotLargeEnoughForTheRequestedOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create directory.
        /// </summary>
        internal static string CannotCreateDirectory {
            get {
                return ResourceManager.GetString("CannotCreateDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Count must not be negative.
        /// </summary>
        internal static string CountMustNotBeNegative {
            get {
                return ResourceManager.GetString("CountMustNotBeNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Devices are not supported..
        /// </summary>
        internal static string DevicesAreNotSupported {
            get {
                return ResourceManager.GetString("DevicesAreNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory exists.
        /// </summary>
        internal static string DirectoryExists {
            get {
                return ResourceManager.GetString("DirectoryExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target file is a directory, not a file: [{0}].
        /// </summary>
        internal static string DirectoryExistsWithSameNameSpecifiedByPath {
            get {
                return ResourceManager.GetString("DirectoryExistsWithSameNameSpecifiedByPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory is not empty: [{0}].
        /// </summary>
        internal static string DirectoryNotEmpty {
            get {
                return ResourceManager.GetString("DirectoryNotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory not found.
        /// </summary>
        internal static string DirectoryNotFound {
            get {
                return ResourceManager.GetString("DirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error code was.
        /// </summary>
        internal static string ErrorCodeWas0 {
            get {
                return ResourceManager.GetString("ErrorCodeWas0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File exists.
        /// </summary>
        internal static string FileExists {
            get {
                return ResourceManager.GetString("FileExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target directory is a file, not a directory: [{0}].
        /// </summary>
        internal static string FileExistsWithSameNameSpecifiedByPath {
            get {
                return ResourceManager.GetString("FileExistsWithSameNameSpecifiedByPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified file is hidden: [{0}].
        /// </summary>
        internal static string FileHidden {
            get {
                return ResourceManager.GetString("FileHidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Handle is closed..
        /// </summary>
        internal static string HandleClosed {
            get {
                return ResourceManager.GetString("HandleClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SafeGlobalMemoryBufferHandle DangerousAddRef / DangerousRelease failure..
        /// </summary>
        internal static string HandleDangerousRef {
            get {
                return ResourceManager.GetString("HandleDangerousRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid handle..
        /// </summary>
        internal static string HandleInvalid {
            get {
                return ResourceManager.GetString("HandleInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid handle. Win32Error: [{0}].
        /// </summary>
        internal static string HandleInvalidWin32Error {
            get {
                return ResourceManager.GetString("HandleInvalidWin32Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating hard-links on non-NTFS partitions is not supported.
        /// </summary>
        internal static string HardLinksOnNonNTFSPartitionsIsNotSupported {
            get {
                return ResourceManager.GetString("HardLinksOnNonNTFSPartitionsIsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal characters: [{0}] in path..
        /// </summary>
        internal static string IllegalCharactersInPath {
            get {
                return ResourceManager.GetString("IllegalCharactersInPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal path.
        /// </summary>
        internal static string IllegalPath {
            get {
                return ResourceManager.GetString("IllegalPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid directory name.
        /// </summary>
        internal static string InvalidDirectoryName {
            get {
                return ResourceManager.GetString("InvalidDirectoryName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt to set an invalid file attribute failed..
        /// </summary>
        internal static string InvalidFileAttribute {
            get {
                return ResourceManager.GetString("InvalidFileAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid security descriptor returned from system..
        /// </summary>
        internal static string InvalidSecurityDescriptorReturnedFromSystem {
            get {
                return ResourceManager.GetString("InvalidSecurityDescriptorReturnedFromSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid transaction object..
        /// </summary>
        internal static string InvalidTransaction {
            get {
                return ResourceManager.GetString("InvalidTransaction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid transaction request..
        /// </summary>
        internal static string InvalidTransactionRequest {
            get {
                return ResourceManager.GetString("InvalidTransactionRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file or directory is not a reparse point..
        /// </summary>
        internal static string NotAReparsePoint {
            get {
                return ResourceManager.GetString("NotAReparsePoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset must not be negative.
        /// </summary>
        internal static string OffsetMustNotBeNegative {
            get {
                return ResourceManager.GetString("OffsetMustNotBeNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path already exists..
        /// </summary>
        internal static string PathAlreadyExists {
            get {
                return ResourceManager.GetString("PathAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path cannot be an empty string..
        /// </summary>
        internal static string PathCannotBeEmpty {
            get {
                return ResourceManager.GetString("PathCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given path&apos;s format is not supported: [{0}].
        /// </summary>
        internal static string PathFormatUnsupported {
            get {
                return ResourceManager.GetString("PathFormatUnsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path is a zero-length string or contains only white space..
        /// </summary>
        internal static string PathIsZeroLengthOrOnlyWhiteSpace {
            get {
                return ResourceManager.GetString("PathIsZeroLengthOrOnlyWhiteSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to name cannot be empty.
        /// </summary>
        internal static string Privilege_Privilege_name_cannot_be_empty {
            get {
                return ResourceManager.GetString("Privilege_Privilege_name_cannot_be_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This method requires Windows Vista or higher..
        /// </summary>
        internal static string RequiresWindowsVistaOrHigher {
            get {
                return ResourceManager.GetString("RequiresWindowsVistaOrHigher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination offset must not be negative.
        /// </summary>
        internal static string SafeGlobalMemoryBufferHandle_CopyTo_Destination_offset_must_not_be_negative {
            get {
                return ResourceManager.GetString("SafeGlobalMemoryBufferHandle_CopyTo_Destination_offset_must_not_be_negative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Length must not be negative..
        /// </summary>
        internal static string SafeGlobalMemoryBufferHandle_CopyTo_Length_must_not_be_negative_ {
            get {
                return ResourceManager.GetString("SafeGlobalMemoryBufferHandle_CopyTo_Length_must_not_be_negative_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source offset and length outside the bounds of the array.
        /// </summary>
        internal static string SafeGlobalMemoryBufferHandle_CopyTo_Source_offset_and_length_outside_the_bounds_of_the_array {
            get {
                return ResourceManager.GetString("SafeGlobalMemoryBufferHandle_CopyTo_Source_offset_and_length_outside_the_bounds_o" +
                        "f_the_array", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid stream..
        /// </summary>
        internal static string StreamInvalid {
            get {
                return ResourceManager.GetString("StreamInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stream name should not contain a colon..
        /// </summary>
        internal static string StreamNameWithColon {
            get {
                return ResourceManager.GetString("StreamNameWithColon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This stream does not support seeking..
        /// </summary>
        internal static string ThisStreamDoesNotSupportSeeking {
            get {
                return ResourceManager.GetString("ThisStreamDoesNotSupportSeeking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transactional conflict..
        /// </summary>
        internal static string TransactionalConflict {
            get {
                return ResourceManager.GetString("TransactionalConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transaction already aborted..
        /// </summary>
        internal static string TransactionAlreadyAborted {
            get {
                return ResourceManager.GetString("TransactionAlreadyAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transaction already committed..
        /// </summary>
        internal static string TransactionAlreadyCommitted {
            get {
                return ResourceManager.GetString("TransactionAlreadyCommitted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transaction not active..
        /// </summary>
        internal static string TransactionNotActive {
            get {
                return ResourceManager.GetString("TransactionNotActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transaction not requested..
        /// </summary>
        internal static string TransactionNotRequested {
            get {
                return ResourceManager.GetString("TransactionNotRequested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network share path should match the format: \\server\share.
        /// </summary>
        internal static string UNCPathShouldMatchTheFormatServerShare {
            get {
                return ResourceManager.GetString("UNCPathShouldMatchTheFormatServerShare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not determine Copy or Move action..
        /// </summary>
        internal static string UndeterminedCopyMoveAction {
            get {
                return ResourceManager.GetString("UndeterminedCopyMoveAction", resourceCulture);
            }
        }
    }
}
